/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/
/* we use this to initialize the whole page. 
As I knew, there were two box-model. So, we need to choose the 
box-sizing as W3C defined.*/

/* In order to make the website responsive, the best implement is set the
html root font size as 10px; then, change every other elements' unit as
rem! */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/* 
everything we reset or specify the font is in the body tag rather than put into
the above universal tag. */
body {
    font-family: "Lato", sans-serif;
    font-weight: 400;
    font-size: 16px;
    line-height: 1.7;
    color: #777;
}

/* In Css, order the element's style in the sequence where they are in the HTML File */
.header {
    position: relative;
    /* 95% of the view point height */
    height: 95vh;
    background-image: linear-gradient(
        to right bottom,
        #7ed56f4f,
        #28b48583),
        url('./../img/hero.jpg');
    background-size: cover;
    background-position: top;
    /* use polygon's four parameter to identify the four corners how the image shows. */
    /* clip-path: polygon(0 0,100% 0, 100% 80%, 0 100%)  */
    clip-path: polygon(0 0,100% 0, 100% 80%,0 100%)
}

/* the position top and left reference to the closet parent element which set
the position attribute as relative. */
.logo-box {
    position: absolute;
    top: 40px;
    left: 40px;
}


.logo {
    /* we only need to set height attribute here, browser will help up scale the width
    automatically. */
    height: 35px;
}

.logo:hover {
    animation: moveInRight 1s ease-in;
}

.text-box {
    position: absolute;
    top: 50%;
    left: 50%;
    /* above two 50% refer to the parent size; however, translate ones refer to */
    /* the element itself. Btw, transform can use to skew and rotate the div!!!*/
    transform: translate(-50%,-50%);
    /* Because we need to make the buttom in the middle,  */
    text-align: center;
}
.heading-primary {
    color: #fff;
    text-transform: uppercase
}

.heading-primary-main {
    display: block;
    font-size: 60px;
    font-weight: 700;
    letter-spacing: 35px;
    animation: moveInLeft 1s linear;
    /* add count can repeat many times */
}

.heading-primary-sub {
    display: block;
    font-size: 30px;
    font-weight: 400;
    letter-spacing: 5px;
    animation: moveInRight 1s cubic-bezier(0.075, 0.82, 0.165, 1);
    margin-bottom: 30px;
}

/* give this animation a name; using @ decorator. */
/* all precentages here mean the process */
@keyframes moveInLeft {
    0% {
        opacity: 0;
        transform: translateX(-100px);
    }

    70% {
        transform: translateX(50px);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveInRight {
    0% {
        opacity: 0;
        transform: translateX(100px);
    }

    70% {
        opacity: 0.7;
        transform:translateX(-50px);
    }

    100% {
        opacity: 1;
        transform: translateX(0);
    }
}

/* The :link CSS pseudo-class represents an element that has not yet been visited. 
It matches every unvisited <a>, <area>, or <link> element that has an href attribute. */
/* To style links appropriately, put the :link rule before all other link-related rules,
 as defined by the LVHA-order: :link — :visited — :hover — :active. */
.btn:link,
.btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 15px 40px;
    display: inline-block;
    border-radius: 100px;
    /* because <a> is an inline element, thus, we cannot use padding or 
    marigin; to make it work, we need to display it as inline-block */
    transition: all .2s;
    position: relative;
}

.btn:hover {
    /* Because the direction of Y-axis is from up to down!! */
    transform: translateY(-5px);
    box-shadow: 0 10px 20px rgba(0,0, 0, .2);
}

/*active means being clicked*/
.btn:active {
    transform: translateY(-1px);
    box-shadow: 0 5px 10px rgba(0,0, 0, .2);
}

.btn-white {
    background-color: white;
    color: #777;
}

.btn::after {
    /* content part is compulsory, otherwise it will not show up */
    content: "";
    display: inline-block;
    /* height and width here refers to the original element */
    height: 100%;
    width: 100%;
    border-radius: 100px;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all .4s;
}

.btn-white::after {
    background-color: white;
    color: #777;
}

.btn:hover::after {
    transform: scale(1.5);
    opacity: 0;
}
